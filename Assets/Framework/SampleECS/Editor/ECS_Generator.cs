using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEditor;
using System.IO;
using System.Text;
using System.Reflection;

namespace SampleECS
{

	public static class EcsEditorTool
	{
		static string editorPath = "";
		public static string GetEditorPath 
		{
			get
			{
				if (string.IsNullOrEmpty(editorPath))
				{
					var path = Directory.GetDirectories(Application.dataPath, "*", SearchOption.AllDirectories);
					foreach (var p in path)
					{
						if (p.EndsWith("SampleECS"))
						{
							editorPath = p;
							break;
						}
					}
				}
				return editorPath;
			}
		}
	}

	public class ECS_Generator
	{
		[MenuItem("公共框架/Sample ECS/全部生成")]
		public static void BuildCodes()
		{
			string gen_path = EcsEditorTool.GetEditorPath + "/GenCodes/";
			if (!Directory.Exists(gen_path))
				Directory.CreateDirectory(gen_path);
			string file_path = gen_path + "ECS_Entity_Wrap.cs";


			StringBuilder entity_sctipt = new StringBuilder();
			entity_sctipt.AppendLine("/*");
			entity_sctipt.AppendLine("\tAuto Generated By SampleECS,Don't Modify It Manually!");
			entity_sctipt.AppendLine("*/");
			entity_sctipt.AppendLine("namespace SampleECS");
			entity_sctipt.AppendLine("{");
			entity_sctipt.AppendLine("\tpublic partial class ECS_Entity");
			entity_sctipt.AppendLine("\t{");

			//反射收集全部Component类型
			var asm_all_types = Assembly.GetAssembly(typeof(ECS_Context)).GetTypes();
			foreach (var type in asm_all_types)
			{
				ComponentAttribute ca = type.GetCustomAttribute<ComponentAttribute>();
				if (ca != null)
				{
					string com_field = type.ToString().ToLower();
					//Component引用
					entity_sctipt.AppendLine(string.Format("\t\tpublic {0} {1};", type, com_field));
                    //Has Component
					entity_sctipt.AppendLine(string.Format("\t\tpublic Has_{0}()\t{}"));
					//Add Component
					entity_sctipt.AppendLine(string.Format("\t\tpublic void Add_{0}({1} com)\t{\tcom = {2};\t}", type, type, com_field));
				}
			}
	        entity_sctipt.AppendLine("\t}");
			entity_sctipt.AppendLine("}");

			using (var e_file = File.CreateText(file_path))
			{
				e_file.Write(entity_sctipt.ToString());
				e_file.Flush();
			}

			AssetDatabase.Refresh();
		}

		[MenuItem("公共框架/Sample ECS/全部清理")]
		public static void CleanCodes()
		{
			string gen_path = EcsEditorTool.GetEditorPath + "/GenCodes";
			if (Directory.Exists(gen_path))
				Directory.Delete(gen_path, true);

			AssetDatabase.Refresh();
		}
	}
}