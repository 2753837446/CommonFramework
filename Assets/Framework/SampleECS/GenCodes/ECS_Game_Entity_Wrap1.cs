/*
	Auto Generated By SampleECS,Don't Modify It Manually!
*/
namespace SampleECS
{
	public partial class ECS_Game_Entity : ECS_Entity
	{
		ECS_Game_Context context;
		public override void Reset(uint uid, int contextIdx) {
			base.Reset(uid, contextIdx);
			context = ECS_Context.GetContext(contextIdx) as ECS_Game_Context;
		}
		const int INVAILD_IDX = -1;

		/************ <1>Begin Component Code : IDComp ************/
		public IDComp idcomp{ get { return context.pool_IDComp.data_pool[poolIndecies[Game_Component_Type.IDComp]-1].user_struct; } set {context.pool_IDComp.data_pool[poolIndecies[Game_Component_Type.IDComp]-1].user_struct = value; }}
		public bool has_IDComp { get { return poolIndecies[Game_Component_Type.IDComp]-1 != INVAILD_IDX; } }
		public void Add_IDComp(IDComp com) {
			if(poolIndecies[Game_Component_Type.IDComp]-1 == INVAILD_IDX) {poolIndecies[Game_Component_Type.IDComp] = context.pool_IDComp.NewComponent(com) +1; context.OnEntityChange(this); }
			if (!entityDirty) { entityDirty = true; context.excute_ptr++; context.excuteEntities[context.excute_ptr] = _in_context_idx; }
			if (context.ExcutingSystem) { com_dirtyMarkBack_Ptr++; com_dirtyMarkBack[com_dirtyMarkBack_Ptr] = Game_Component_Type.IDComp; }
			else { com_dirtyMarkFront_Ptr++; com_dirtyMarkFront[com_dirtyMarkFront_Ptr] = Game_Component_Type.IDComp; }
		}
		public void Remove_IDComp() {
			if (!has_IDComp) return;
			context.pool_IDComp.Recycle(poolIndecies[Game_Component_Type.IDComp]); poolIndecies[Game_Component_Type.IDComp] = 0; context.OnEntityChange(this);
		}
		public void Replace_IDComp(IDComp com)
		{
			if (!entityDirty) { entityDirty = true; context.excute_ptr++; context.excuteEntities[context.excute_ptr] = _in_context_idx; }
			idcomp = com;
			if (context.ExcutingSystem) { com_dirtyMarkBack_Ptr++; com_dirtyMarkBack[com_dirtyMarkBack_Ptr] = Game_Component_Type.IDComp; }
			else { com_dirtyMarkFront_Ptr++; com_dirtyMarkFront[com_dirtyMarkFront_Ptr] = Game_Component_Type.IDComp; }
		}
		/************ <1>End Component Code : IDComp ************/

		/************ <2>Begin Component Code : PositionComp ************/
		public PositionComp positioncomp{ get { return context.pool_PositionComp.data_pool[poolIndecies[Game_Component_Type.PositionComp]-1].user_struct; } set {context.pool_PositionComp.data_pool[poolIndecies[Game_Component_Type.PositionComp]-1].user_struct = value; }}
		public bool has_PositionComp { get { return poolIndecies[Game_Component_Type.PositionComp]-1 != INVAILD_IDX; } }
		public void Add_PositionComp(PositionComp com) {
			if(poolIndecies[Game_Component_Type.PositionComp]-1 == INVAILD_IDX) {poolIndecies[Game_Component_Type.PositionComp] = context.pool_PositionComp.NewComponent(com) +1; context.OnEntityChange(this); }
			if (!entityDirty) { entityDirty = true; context.excute_ptr++; context.excuteEntities[context.excute_ptr] = _in_context_idx; }
			if (context.ExcutingSystem) { com_dirtyMarkBack_Ptr++; com_dirtyMarkBack[com_dirtyMarkBack_Ptr] = Game_Component_Type.PositionComp; }
			else { com_dirtyMarkFront_Ptr++; com_dirtyMarkFront[com_dirtyMarkFront_Ptr] = Game_Component_Type.PositionComp; }
		}
		public void Remove_PositionComp() {
			if (!has_PositionComp) return;
			context.pool_PositionComp.Recycle(poolIndecies[Game_Component_Type.PositionComp]); poolIndecies[Game_Component_Type.PositionComp] = 0; context.OnEntityChange(this);
		}
		public void Replace_PositionComp(PositionComp com)
		{
			if (!entityDirty) { entityDirty = true; context.excute_ptr++; context.excuteEntities[context.excute_ptr] = _in_context_idx; }
			positioncomp = com;
			if (context.ExcutingSystem) { com_dirtyMarkBack_Ptr++; com_dirtyMarkBack[com_dirtyMarkBack_Ptr] = Game_Component_Type.PositionComp; }
			else { com_dirtyMarkFront_Ptr++; com_dirtyMarkFront[com_dirtyMarkFront_Ptr] = Game_Component_Type.PositionComp; }
		}
		/************ <2>End Component Code : PositionComp ************/

		/************ <3>Begin Component Code : TransformComp ************/
		public TransformComp transformcomp{ get { return context.pool_TransformComp.data_pool[poolIndecies[Game_Component_Type.TransformComp]-1].user_struct; } set {context.pool_TransformComp.data_pool[poolIndecies[Game_Component_Type.TransformComp]-1].user_struct = value; }}
		public bool has_TransformComp { get { return poolIndecies[Game_Component_Type.TransformComp]-1 != INVAILD_IDX; } }
		public void Add_TransformComp(TransformComp com) {
			if(poolIndecies[Game_Component_Type.TransformComp]-1 == INVAILD_IDX) {poolIndecies[Game_Component_Type.TransformComp] = context.pool_TransformComp.NewComponent(com) +1; context.OnEntityChange(this); }
			if (!entityDirty) { entityDirty = true; context.excute_ptr++; context.excuteEntities[context.excute_ptr] = _in_context_idx; }
			if (context.ExcutingSystem) { com_dirtyMarkBack_Ptr++; com_dirtyMarkBack[com_dirtyMarkBack_Ptr] = Game_Component_Type.TransformComp; }
			else { com_dirtyMarkFront_Ptr++; com_dirtyMarkFront[com_dirtyMarkFront_Ptr] = Game_Component_Type.TransformComp; }
		}
		public void Remove_TransformComp() {
			if (!has_TransformComp) return;
			context.pool_TransformComp.Recycle(poolIndecies[Game_Component_Type.TransformComp]); poolIndecies[Game_Component_Type.TransformComp] = 0; context.OnEntityChange(this);
		}
		public void Replace_TransformComp(TransformComp com)
		{
			if (!entityDirty) { entityDirty = true; context.excute_ptr++; context.excuteEntities[context.excute_ptr] = _in_context_idx; }
			transformcomp = com;
			if (context.ExcutingSystem) { com_dirtyMarkBack_Ptr++; com_dirtyMarkBack[com_dirtyMarkBack_Ptr] = Game_Component_Type.TransformComp; }
			else { com_dirtyMarkFront_Ptr++; com_dirtyMarkFront[com_dirtyMarkFront_Ptr] = Game_Component_Type.TransformComp; }
		}
		/************ <3>End Component Code : TransformComp ************/

		/************ <4>Begin Component Code : CreateComp ************/
		public CreateComp createcomp{ get { return context.pool_CreateComp.data_pool[poolIndecies[Game_Component_Type.CreateComp]-1].user_struct; } set {context.pool_CreateComp.data_pool[poolIndecies[Game_Component_Type.CreateComp]-1].user_struct = value; }}
		public bool has_CreateComp { get { return poolIndecies[Game_Component_Type.CreateComp]-1 != INVAILD_IDX; } }
		public void Add_CreateComp(CreateComp com) {
			if(poolIndecies[Game_Component_Type.CreateComp]-1 == INVAILD_IDX) {poolIndecies[Game_Component_Type.CreateComp] = context.pool_CreateComp.NewComponent(com) +1; context.OnEntityChange(this); }
			if (!entityDirty) { entityDirty = true; context.excute_ptr++; context.excuteEntities[context.excute_ptr] = _in_context_idx; }
			if (context.ExcutingSystem) { com_dirtyMarkBack_Ptr++; com_dirtyMarkBack[com_dirtyMarkBack_Ptr] = Game_Component_Type.CreateComp; }
			else { com_dirtyMarkFront_Ptr++; com_dirtyMarkFront[com_dirtyMarkFront_Ptr] = Game_Component_Type.CreateComp; }
		}
		public void Remove_CreateComp() {
			if (!has_CreateComp) return;
			context.pool_CreateComp.Recycle(poolIndecies[Game_Component_Type.CreateComp]); poolIndecies[Game_Component_Type.CreateComp] = 0; context.OnEntityChange(this);
		}
		public void Replace_CreateComp(CreateComp com)
		{
			if (!entityDirty) { entityDirty = true; context.excute_ptr++; context.excuteEntities[context.excute_ptr] = _in_context_idx; }
			createcomp = com;
			if (context.ExcutingSystem) { com_dirtyMarkBack_Ptr++; com_dirtyMarkBack[com_dirtyMarkBack_Ptr] = Game_Component_Type.CreateComp; }
			else { com_dirtyMarkFront_Ptr++; com_dirtyMarkFront[com_dirtyMarkFront_Ptr] = Game_Component_Type.CreateComp; }
		}
		/************ <4>End Component Code : CreateComp ************/

	}
}
